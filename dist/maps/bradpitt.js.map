{"version":3,"file":null,"sources":["/Users/kevingreen/Sites/bradpitt/src/bradpitt.js"],"sourcesContent":["\n\n\n/**\n *  @param  {object|...array} el dom element/s\n *  @param  {string} className long to wait for a response\n *  @param  {number} timing in milliseconds\n *  @param  {options} options object\n */\n\nfunction lazy(el, className, timing, options = {}) {\n  let change = options.change || 'add'\n  let classSwap = (e) => {\n    switch(change) {\n      case 'add':\n        e.classList.add(className)\n        break\n      case 'remove':\n        e.classList.remove(className)\n        break\n      case 'toggle':\n        e.classList.toggle(className)\n        break\n      default:\n        console.log('invalid value for change option specified')\n    }\n  }\n  let sT = (e) => {\n    setTimeout(() => { classSwap(e) }, timing)\n  }\n  el.length ? Array.from(el, (e) => { sT(e) }) : sT(el)\n  return this\n}\n\nexports.lazy = lazy\n"],"names":["lazy","el","className","timing","options","change","classSwap","e","classList","add","remove","toggle","log","sT","length","Array","from","this","exports"],"mappings":"yJAUA,SAASA,GAAKC,EAAIC,EAAWC,MAAQC,8DAC/BC,EAASD,EAAQC,QAAU,MAC3BC,EAAY,SAACC,UACRF,OACA,QACDG,UAAUC,IAAIP,aAEb,WACDM,UAAUE,OAAOR,aAEhB,WACDM,UAAUG,OAAOT,yBAGXU,IAAI,+CAGdC,EAAK,SAACN,cACG,aAAkBA,IAAMJ,aAElCW,OAASC,MAAMC,KAAKf,EAAI,SAACM,KAAWA,KAAQM,EAAGZ,GAC3CgB,KAGTC,QAAQlB,KAAOA"}