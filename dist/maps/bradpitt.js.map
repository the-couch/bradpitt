{"version":3,"file":null,"sources":["/Users/kevingreen/Sites/bradpitt/src/bradpitt.js"],"sourcesContent":["\nlet classSwap = (e, change, className) => {\n  switch(change) {\n    case 'add':\n      e.classList.add(className)\n      break\n    case 'remove':\n      e.classList.remove(className)\n      break\n    case 'toggle':\n      e.classList.toggle(className)\n      break\n    default:\n      console.log('invalid value for change option specified')\n  }\n}\n\n/**\n *  @param  {object|...array} el dom element/s\n *  @param  {string} className long to wait for a response\n *  @param  {number} timing in milliseconds\n *  @param  {options} options object\n */\n\nfunction lazy(el, className, timing, options = {}) {\n  let change = options.change || 'add'\n  let sT = (e) => {\n    setTimeout(() => { classSwap(e, change, className) }, timing)\n  }\n  el.length ? Array.from(el, (e) => { sT(e) }) : sT(el)\n  return this\n}\n\nexports.lazy = lazy\n"],"names":["lazy","el","className","timing","options","change","sT","e","length","Array","from","this","classSwap","classList","add","remove","toggle","log","exports"],"mappings":"yJAwBA,SAASA,GAAKC,EAAIC,EAAWC,MAAQC,8DAC/BC,EAASD,EAAQC,QAAU,MAC3BC,EAAK,SAACC,cACG,aAAkBA,EAAGF,EAAQH,IAAcC,aAErDK,OAASC,MAAMC,KAAKT,EAAI,SAACM,KAAWA,KAAQD,EAAGL,GAC3CU,KA7BT,GAAIC,GAAY,SAACL,EAAGF,EAAQH,UACnBG,OACA,QACDQ,UAAUC,IAAIZ,aAEb,WACDW,UAAUE,OAAOb,aAEhB,WACDW,UAAUG,OAAOd,yBAGXe,IAAI,8CAoBlBC,SAAQlB,KAAOA"}